# Generated by Django 4.2.16 on 2025-08-23 12:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ai_features', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TimetableConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('days_per_week', models.IntegerField(default=5, help_text='Number of working days')),
                ('periods_per_day', models.IntegerField(default=8, help_text='Number of periods per day')),
                ('period_duration', models.IntegerField(default=50, help_text='Period duration in minutes')),
                ('break_periods', models.JSONField(default=list, help_text='List of break period numbers')),
                ('break_duration', models.IntegerField(default=15, help_text='Break duration in minutes')),
                ('max_teacher_periods_per_day', models.IntegerField(default=5)),
                ('max_consecutive_periods', models.IntegerField(default=2)),
                ('max_subject_periods_per_day', models.IntegerField(default=3)),
                ('algorithm_type', models.CharField(choices=[('constraint_satisfaction', 'Constraint Satisfaction'), ('genetic_algorithm', 'Genetic Algorithm'), ('greedy_algorithm', 'Greedy Algorithm'), ('backtracking', 'Backtracking Algorithm')], default='constraint_satisfaction', max_length=25)),
                ('max_iterations', models.IntegerField(default=1000, help_text='Maximum algorithm iterations')),
                ('timeout_seconds', models.IntegerField(default=30, help_text='Algorithm timeout in seconds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AlgorithmicTimetableSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('section', models.CharField(max_length=5)),
                ('academic_year', models.CharField(max_length=10)),
                ('semester', models.IntegerField()),
                ('algorithm_type', models.CharField(choices=[('constraint_satisfaction', 'Constraint Satisfaction'), ('genetic_algorithm', 'Genetic Algorithm'), ('greedy_algorithm', 'Greedy Algorithm'), ('backtracking', 'Backtracking Algorithm')], default='constraint_satisfaction', max_length=25)),
                ('max_periods_per_day', models.IntegerField(default=8, help_text='Maximum periods per day')),
                ('max_teacher_periods_per_day', models.IntegerField(default=5, help_text='Maximum periods a teacher can teach per day')),
                ('max_consecutive_periods', models.IntegerField(default=2, help_text='Maximum consecutive periods for same subject')),
                ('break_duration', models.IntegerField(default=15, help_text='Break duration in minutes')),
                ('suggestion_data', models.JSONField(help_text='Generated timetable data using algorithms')),
                ('optimization_score', models.FloatField(default=0.0, help_text='Algorithm optimization score (0-100)')),
                ('conflicts_resolved', models.IntegerField(default=0)),
                ('constraint_violations', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('generated', 'Generated'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('implemented', 'Implemented')], default='generated', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='algorithmic_suggestions', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_algorithmic_suggestions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-optimization_score', '-created_at'],
            },
        ),
    ]
